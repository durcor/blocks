#!/bin/sh
# shellcheck disable=1090,2154

. "${XDG_CACHE_HOME-$HOME/.cache}/wal/colors.sh"
blockcolor=$color9
txtcolor=$color0

# GPUs aren't usually hot-swapped unless it's a thunderbolt eGPU system,
# so just check the GPU's identity once per boot
[ -f /tmp/i3bgpu ] || {
    if command -v glxinfo >/dev/null; then
        glxinfo -B | awk -F':' '/OpenGL renderer string/ {print $2}' | xargs |
            tr ' ' '\n' | head -1 > /tmp/i3bgpu
    else
        lspci | awk -F':' '/VGA/ {print $3}' | xargs | tr ' ' '\n' | head -1 |
            sed 's|Advanced|AMD|' > /tmp/i3bgpu
    fi ;}

case $(cat /tmp/i3bgpu) in
    "AMD")
        monitor_program="radeontop -c"
        lm_sensors_name="amdgpu"
        ;;
    "Intel")
        ;;
    "NVIDIA")
        ;;
esac

gpu_info_dir=/sys/class/drm/card0/device/
gpuinfo=$(sensors | grep $lm_sensors_name -A10)

case $BLOCK_BUTTON in
    1) # Left Click
    notify-send \
        -h string:x-canonical-private-synchronous:i3bamdgpu \
        -i ~/.local/bin/i3blocks/img/gpu.png \
        "Voltages/Temps/Fan RPM/Power Usage for my$(
            glxinfo -B | awk -F':' '/OpenGL renderer string/{print $2}' | awk -F'(' '{print $1}'
            )" "$(echo "$gpuinfo" | grep -A8 vddgfx)"
        ;;
    2) # Middle Click
        $TERMINAL --class float -e "$monitor_program"
        ;;
    3) # Right Click
        notify-send \
            -h string:x-canonical-private-synchronous:i3bamdgpu \
            -i ~/.local/bin/i3blocks/img/gpu.png \
            "Clock/VRAM Stats for my$(glxinfo -B | awk -F':' '/OpenGL renderer string/{print $2}' | awk -F'(' '{print $1}'
                    )" "Shader Usage: $(cat $gpu_info_dir/gpu_busy_percent)%
Memory Usage: $(cat $gpu_info_dir/mem_busy_percent)%
VRAM Usage: $(echo "$(cat $gpu_info_dir/mem_info_vram_used)"/1000000000 | bc -l | cut -c-3)/$(echo "$(cat $gpu_info_dir/mem_info_vram_total)"/1000000000 | bc -l | cut -c-3)Gi
Memory Clock: $(grep "\*" $gpu_info_dir/pp_dpm_mclk | awk '{print $2}')
Shader Clock: $(grep "\*" $gpu_info_dir/pp_dpm_sclk | awk '{print $2}')"
        ;;
    4) # Scroll Up
        ;;
    5) # Scroll Down
        ;;
esac

usage=$(cat $gpu_info_dir/gpu_busy_percent)

icon=""

# if [ "$usage" -ge 90 ] ; then
#     usage_icon=""
# elif [ "$usage" -ge 60 ] ; then
#     usage_icon=""
# elif [ "$usage" -ge 40 ] ; then
#     usage_icon=""
# elif [ "$usage" -ge 10 ] ; then
#     usage_icon=""
# else
#     usage_icon=""
# fi

shader_clock=$(grep "\*" $gpu_info_dir/pp_dpm_sclk | awk '{print $2}')

power_usage=$(echo "$gpuinfo" | awk '/power/ {print $2}' |
    awk -F. '{print $1}')

temp=$(echo "$gpuinfo" | awk '/junction/ {print $2}' | awk -F. '{print $1}' | sed 's/+//')

printf "\
<b><span foreground='$blockcolor' background='$color0'></span>\
<span foreground='$txtcolor' background='$blockcolor'> %s </span>\
<span foreground='$color0' background='$blockcolor'></span></b>\n" \
"$icon ${usage}% ${shader_clock} ${power_usage}W ${temp}°C"
